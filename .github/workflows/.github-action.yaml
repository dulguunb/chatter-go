name: Build and Release

on:
  push:
    branches:
      - '**'     # all branches
    tags:
      - 'v*.*.*' # version tags
  pull_request:
    branches:
      - '**' 
permissions:
  packages: write
  contents: write

jobs:
  test-build-release:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/chatter
      IMAGE_TAG: ${{ github.sha }}
      SERVER_BUILD_PATH: server/build/server

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.8'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'

      - name: Run unit tests
        run: |
          cd client
          make test
        env:
          CGO_ENABLED: 0

      - name: Build client flutter binary
        run: |
          sudo apt-get install build-essential libgtk-3-dev
          cd flutter_client
          make linux

      - name: Build server binary
        run: |
          PROGRAM_NAME=server make linux_static -f build.mk
          cp server/build/server deploy/docker/

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          build-args: |
            SERVER_BUILD_PATH=${{ env.SERVER_BUILD_PATH }}
          context: deploy/docker/
          file: deploy/docker/server.Dockerfile
          tags: ghcr.io/${{ github.repository_owner }}/chatter:${{ github.sha }}
          push: true

      - name: List and tar build outputs
        run: |
          ls -lh server/build/
          ls -lh flutter_client/build/linux/x64/release/bundle/meow
          tar -czvf meow.tar.gz flutter_client/build/linux/x64/release/bundle/
          ls -lh

      - name: Create GitHub Release (only on tags)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            server/build/server
            meow.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}